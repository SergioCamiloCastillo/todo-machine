{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter.jsx","TodoItem.jsx","CreateTodoButton.jsx","TodoSearch.jsx","TodoList.jsx","TodoForm/index.js","Modal/index.js","AppUI.js","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","err","saveItem","newTodos","stringifyTodos","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","deleteTodo","todoIndex","findIndex","splice","completeTodo","addTodo","push","children","TodoCounter","useContext","className","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","TodoSearch","onChange","e","target","console","log","placeholder","TodoList","TodoForm","newTodoValue","setNewTodoValue","onSubmit","event","preventDefault","type","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.5e14d078.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\nconst { item: todos, saveItem: saveTodos, loading, error } = useLocalStorage('TODOS_V1', []);\nconst [searchValue, setSearchValue] = useState('');\nconst [openModal, setOpenModal] = useState(false);\nconst completedTodos = todos.filter(todo => !!todo.completed).length;\nconst totalTodos = todos.length;\n\nlet searchedTodos = [];\nif (!searchValue.length >= 1) {\n    searchedTodos = todos;\n} else {\n    searchedTodos = todos.filter(todo => {\n\n        const todoText = todo.text.toLowerCase();//estamos convirtiendo cada todo y conviertiendolo en minuscula para compararlo\n        const searchText = searchValue.toLowerCase();//convertir en minuscula lo que escribamos en el search\n        return todoText.includes(searchText); // en cuales de todos los todos incluyen alguna letra de search text\n\n    });\n}\n\nconst completeTodo = (text) => { //cambiar tarea completada\n    const todoIndex = todos.findIndex(todo => todo.text === text);//examinar todo por todo cual tiene el mismo texto, y nos vota la posicion donde esta\n    const newTodos = [...todos];//en newtodos trae lo que haya en el estado todos\n    newTodos[todoIndex].completed = true; // cambiar en la posicion index el campo completed a true\n    saveTodos(newTodos); //asigna a el estado settodos los nuevos todos con completed = true\n\n}\nconst deleteTodo = (text) => { //cambiar tarea completada\n    const todoIndex = todos.findIndex(todo => todo.text === text);//examinar todo por todo cual tiene el mismo texto, y nos vota la posicion donde esta\n    const newTodos = [...todos];//en newtodos trae una copia de lo que haya en el estado todos\n    newTodos.splice(todoIndex, 1) // cambiar en la posicion index el campo completed a true\n    saveTodos(newTodos); //asigna a el estado settodos los nuevos todos con completed = true\n\n}\nconst addTodo = (text) => { \n    const newTodos = [...todos];\n    newTodos.push({\n      \n        completed:false,\n        text\n    });\n    saveTodos(newTodos);\n\n\n}\n    return (\n        <TodoContext.Provider value={{\n            completedTodos,\n            totalTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            deleteTodo,\n            completeTodo,\n            loading,\n            error,\n            openModal,\n            setOpenModal,\n            addTodo\n        }}>\n            {props.children}\n\n        </TodoContext.Provider>\n    )\n}\nexport {TodoContext, TodoProvider}","import React,{useEffect, useState} from \"react\";\nfunction useLocalStorage(itemName, initialValue) {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const [item, setItem] = useState(initialValue);\n\n    useEffect(() => {\n        setTimeout(() => {\n            try {\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                if (!localStorageItem) {\n                    //no hay datos en localstorage\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = [];\n                } else {\n                    //Nuestro localstaorage tiene datos registrados antes\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (err) {\n                setError(err);\n            }\n\n        }, 1000);\n\n    })\n\n\n\n\n    const saveItem = (newTodos) => {\n\n        try {\n            const stringifyTodos = JSON.stringify(newTodos);\n            localStorage.setItem(itemName, stringifyTodos);\n            setItem(newTodos);\n        } catch (err) {\n            setItem(err);\n        }\n    }\n    return {\n        item, saveItem, loading, error\n    }\n}\nexport {useLocalStorage}","import React, { useContext } from 'react';\nimport './TodoCounter.css';\nimport { TodoContext } from './TodoContext';\nfunction TodoCounter() {\n  const {completedTodos,totalTodos} = useContext(TodoContext)\n  return (\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n \n  return (\n    <li className=\"TodoItem\">\n      <span onClick={props.onComplete} className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}>\n        âˆš\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span onClick={props.onDelete} className=\"Icon Icon-delete\">\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal(prevState => !prevState);\n  }\n  return (\n    <button className=\"CreateTodoButton\"\n\n      onClick={onClickButton}\n\n    >+</button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React,{useContext, useState} from 'react';\nimport { TodoContext } from './TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n    const {searchValue, setSearchValue} = useContext(TodoContext);\n    const onSearchValueChange = (e) => {\n        setSearchValue(e.target.value);\n        console.log(e.target.value);\n    }\n    return (\n        <input value={searchValue} onChange={onSearchValueChange} className=\"TodoSearch\" placeholder=\"Busca una tarea...\" />\n \n    )\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React, { useContext, useState } from 'react'\nimport { TodoContext } from '../TodoContext'\n\nexport function TodoForm() {\n    const [newTodoValue, setNewTodoValue] = useState('');\n    const {\n        addTodo,\n        setOpenModal\n    } = useContext(TodoContext);\n\n    const onCancel = () => {\n        setOpenModal(false);    }\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n    const onAdd = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n\n    }\n\n    return (\n        <form onSubmit={onAdd}>\n            <label>...</label>\n            <textarea value={newTodoValue} onChange={onChange} placeholder='Escribe la tarea' />\n            <div>\n                <button type='button' onClick={onCancel}>Cancelar</button>\n                <button type='submit'>AÃ±adir</button>\n            </div>\n        </form>\n    )\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport \"./Modal.css\";\nexport default function Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className='ModalBackground'>\n              {children}\n        </div>\n        ,\n        document.getElementById('modal')\n\n    )\n}\n","import React, { useState, useContext } from \"react\";\nimport { TodoCounter } from \"./TodoCounter\"\nimport { TodoItem } from \"./TodoItem\";\nimport { CreateTodoButton } from \"./CreateTodoButton\"\nimport { TodoSearch } from \"./TodoSearch\";\nimport { TodoList } from \"./TodoList\";\nimport { TodoContext } from \"./TodoContext\";\nimport { TodoForm } from \"./TodoForm\";\nimport Modal from \"./Modal\";\n/*import './App.css';*/\nfunction AppUI() {\n    const { error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo, openModal, setOpenModal } = useContext(TodoContext);\n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n\n            <TodoList>\n                {error && <p>DesespÃ©rate, hubo un error...</p>}\n                {loading && <p>Estamos cargando, no desesperes...</p>}\n                {(!loading && !searchedTodos.length) && <p>Â¡Crea tu primer TODO!</p>}\n\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n            {\n                !!openModal && (\n                    <Modal>\n                        <TodoForm />\n                    </Modal>\n\n                )\n            }\n\n            <CreateTodoButton setOpenModal={setOpenModal} />\n        </React.Fragment>\n    );\n}\n\nexport { AppUI };","import { AppUI } from \"./AppUI\";\nimport react, { useState, useEffect } from \"react\";\nimport { TodoProvider } from './TodoContext';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}